{"version":3,"sources":["components/Search/index.js","components/PersonForm/index.js","components/Note/index.js","components/Persons/index.js","services/phoneBook.js","components/Notification/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Search","props","text","handleChange","type","value","onChange","PersonForm","newName","handleChangeName","newNumber","HandleChangeNumber","handleSubmit","onClick","Note","name","number","deletePerson","Persons","persons","search","filter","person","toLowerCase","includes","map","key","id","baseUrl","Axios","get","then","response","data","newObject","post","delete","put","Notification","message","className","App","useState","setPersons","setType","setMessage","useEffect","PhoneBookService","allPersons","setNewName","setNewNumber","setSearch","showMessage","setTimeout","e","target","preventDefault","window","confirm","find","phoneBook","newPerson","catch","error","console","log","concat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52d335d0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Search = props => {\n  const { text, handleChange } = props\n\n  return (\n    <div>\n      查找用户：<input type=\"text\" value={text} onChange={handleChange} />\n    </div>\n  )\n}\n\nexport default Search\n","import React from 'react'\n\nconst PersonForm = props => {\n  const { newName, handleChangeName, newNumber, HandleChangeNumber, handleSubmit } = props\n\n  return (\n    <form>\n        <h2>添加新用户</h2>\n        <div>\n          name: <input value={newName} onChange={handleChangeName} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={HandleChangeNumber} />\n        </div>\n        <div>\n          <button type=\"submit\" onClick={handleSubmit}>add</button>\n        </div>\n      </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Note = props => {\n  const { name, number, deletePerson } = props\n\n  return (\n    <p>\n      {name} {number}\n      <button onClick={deletePerson}>delete</button>\n    </p>\n  )\n}\n\nexport default Note\n","import React from 'react'\nimport Note from '../Note'\n\nconst Persons = props => {\n  const { persons, search, deletePerson } = props\n\n  return (\n    <>\n    { persons\n      .filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n      .map(person => <Note key={person.name} name={person.name} number={person.number} deletePerson={() => deletePerson(person.id, person.name)} />)\n    }\n    </>\n  )\n}\n\nexport default Persons\n","import Axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = Axios.get(baseUrl)\r\n\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = Axios.post(baseUrl, newObject)\r\n\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = Axios.delete(`${baseUrl}/${id}`)\r\n\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = Axios.put(`${baseUrl}/${id}`, newObject)\r\n\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }\r\n","import React from 'react'\n\nconst Notification = props => {\n  const { message, type } = props\n\n  if (message === '') {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      <h2>{message}</h2>\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\r\nimport Search from '../Search'\r\nimport PersonForm from '../PersonForm'\r\nimport Persons from '../Persons'\r\nimport PhoneBookService from '../../services/phoneBook'\r\nimport phoneBook from '../../services/phoneBook'\r\nimport Notification from '../Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [type, setType] = useState('success')\r\n  const [message, setMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    PhoneBookService\r\n      .getAll()\r\n      .then(allPersons => {\r\n        setPersons(allPersons)\r\n      })\r\n  }, [])\r\n\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ search, setSearch ] = useState('')\r\n\r\n  const showMessage = (message, type) => {\r\n    setMessage(message)\r\n    setType(type)\r\n\r\n    setTimeout(() => {\r\n      setMessage('')\r\n    }, 3000)\r\n  }\r\n\r\n  const handleChangeName = e => {\r\n    setNewName(e.target.value)\r\n  }\r\n\r\n  const HandleChangeNumber = e => {\r\n    setNewNumber(e.target.value)\r\n  }\r\n\r\n  const handleChangeSearch = e => {\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    const flag = persons.map(person => person.name).includes(newName)\r\n\r\n    if (flag) {\r\n      const flag = window.confirm(`电话簿中已保存 ${newName}，是否覆盖?`)\r\n      if (flag) {\r\n        const id = persons.find(person => person.name === newName).id\r\n\r\n        phoneBook.update(id, {name: newName, number: newNumber})\r\n          .then(newPerson => {\r\n            setPersons(persons.map(person => person.name !== newName ? person : newPerson))\r\n\r\n            showMessage(`覆盖 ${newName} 成功！`, 'success')\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response.data.error)\r\n\r\n            showMessage(error.response.data.error, 'warn')\r\n          })\r\n      }\r\n    } else {\r\n      PhoneBookService\r\n        .create({name: newName, number: newNumber})\r\n        .then(newPerson => {\r\n          setPersons(persons.concat(newPerson))\r\n\r\n          showMessage(`添加 ${newName} 成功！`, 'success')\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data.error)\r\n\r\n          showMessage(error.response.data.error, 'warn')\r\n        })\r\n    }\r\n\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const deletePerson = (id, name) => {\r\n    const flag = window.confirm(`确定删除 ${name} ?`)\r\n\r\n    if (flag) {\r\n      phoneBook\r\n        .remove(id)\r\n        .then(() => {\r\n          setPersons(persons.filter(person => person.id !== id))\r\n\r\n          showMessage(`删除 ${name} 成功！`, 'success')\r\n        })\r\n        .catch(error => {\r\n          showMessage(`服务器不存在此用户，删除 ${name} 失败！`, 'warn')\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={message} type={type} />\r\n      <h2>电话簿</h2>\r\n      <Search text={search} handleChange={handleChangeSearch} />\r\n      <PersonForm newName={newName} handleChangeName={handleChangeName} newNumber={newNumber} HandleChangeNumber={HandleChangeNumber} handleSubmit={handleSubmit} />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} search={search} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}